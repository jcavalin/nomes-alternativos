{"version":3,"sources":["services/api.js","pages/Index/index.js","Routes.js","App.js","index.js"],"names":["api","axios","create","baseURL","Index","useState","next","setNext","names","setNames","loading","setLoading","searchTimeout","fetchData","search","toUpperCase","normalize","replace","normalizeSearch","get","then","response","data","results","capitalize","name","charAt","toLowerCase","slice","formatLabel","showLoading","className","useEffect","type","placeholder","onChange","event","value","currentTarget","clearTimeout","setTimeout","href","class","style","length","display","dataLength","hasMore","loader","map","key","first_name","split","formatName","alternative_names","onClick","window","scrollTo","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAMeA,G,MAJHC,IAAMC,OAAO,CACrBC,QAAU,iDC6HCC,MAzHf,WAAkB,IAAD,EACWC,mBAAS,MADpB,mBACNC,EADM,KACAC,EADA,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,OAGiBJ,oBAAS,GAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKTC,EAAgB,KAEdC,EAAY,SAAAC,GACdH,GAAW,GAMXG,EAASA,EAAM,sBAJO,SAAAA,GAAM,OAAIA,EAAOC,cACAC,UAAU,OACVC,QAAQ,mBAAoB,IAElCC,CAAgBJ,IAAY,GAE7Dd,EAAImB,IAAJ,qBAAsBL,IAAUM,MAAK,SAAAC,GAAa,IAAD,EACvBA,EAASC,KAA1BhB,EADwC,EACxCA,KAAMiB,EADkC,EAClCA,QAEXhB,EAAQD,GACRG,EAASc,GACTZ,GAAW,OAiBba,EAAa,SAAAC,GAAI,OAClBA,GAAQ,IAAIC,OAAO,GAAGX,cAAgBU,EAAKE,cAAcC,MAAM,IAE9DC,EAAc,SAAAJ,GAAI,OAAK,+BAAQA,IAiB/BK,EAAc,kBAChB,wBAAIC,UAAU,WAAd,kBAOJ,OAFAC,oBAAUnB,EAAW,IAGjB,yBAAKkB,UAAU,mBACX,yBAAKA,UAAU,UACX,2BAAOE,KAAK,OAAOC,YAAY,mBAAmBC,SAvBzC,SAAAC,GAAU,IACrBC,EAAUD,EAAME,cAAhBD,MAEHzB,GACC2B,aAAa3B,GAGjBA,EAAgB4B,YAAW,kBAAM3B,EAAUwB,KAAQ,QAiB3C,8FAEkB,uBAAGI,KAAK,qBAAR,aAFlB,KAKA,6BACK/B,EAAUoB,IAAgB,GAE3B,wBAAIY,MAAM,QAAQC,MAAOjC,GAAWF,EAAMoC,OAAS,EAAI,CAACC,QAAU,QAAU,IAA5E,6BAMR,6BAASd,UAAU,QACf,yBAAKY,MAAwB,IAAjBnC,EAAMoC,OAAe,CAACC,QAAU,QAAU,IAClD,qCAEA,4BACI,kBAAC,IAAD,CACIC,WAAYtC,EAAMoC,OAClBtC,KAlEN,WACVA,GAIJL,IAAMkB,IAAIb,GAAMc,MAAK,SAAAC,GAAa,IAAD,EACPA,EAASC,KAA1BhB,EADwB,EACxBA,KAAMiB,EADkB,EAClBA,QAEXhB,EAAQD,GACRG,EAAS,GAAD,mBAAKD,GAAL,YAAee,SA0DPwB,SAAS,EACTC,OAAQlB,KAEPtB,EAAMyC,KAAI,SAAAxB,GAAI,OACX,wBAAIyB,IAAKzB,EAAK0B,YACV,yBAAKpB,UAAU,QACVP,EAAWC,EAAK0B,aAGrB,yBAAKpB,UAAU,gBACX,gDACA,6BA5DjB,SAAAN,GAAI,OAClBA,GAAQ,KAAK2B,MAAM,KAAKH,IAAIzB,GAAYyB,IAAIpB,GA4DRwB,CAAW5B,EAAK6B,4BAS7C,4BAAQrB,KAAK,SAASF,UAAU,aAAawB,QAzDrC,kBAAMC,OAAOC,SAAS,EAAG,KAyDjC,WCnHD,SAASC,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzD,M,MCKlC0D,MATf,WACE,OACE,yBAAK/B,UAAU,QACX,kDACA,kBAAC2B,EAAD,QCLRK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e3932f8a.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL : 'https://brasil.io/api/dataset/genero-nomes/'\n});\n\nexport default api;","import React, { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport axios from 'axios';\nimport './styles.css';\n\nimport api from '../../services/api';\n\nfunction Index() {\n    const [next, setNext] = useState(null);\n    const [names, setNames] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    let searchTimeout = null;\n\n    const fetchData = search => {\n        setLoading(true);\n            \n        let normalizeSearch = search => search.toUpperCase()\n                                              .normalize(\"NFD\")\n                                              .replace(/[\\u0300-\\u036f]/g, \"\"); \n\n        search = search ? `?first_name=${normalizeSearch(search)}` : ''; \n    \n        api.get(`nomes/data/${search}`).then(response => {\n            let {next, results} = response.data;\n            \n            setNext(next);\n            setNames(results);\n            setLoading(false);\n        });\n    }\n    \n    const fetchNext = () => {\n        if(!next) {\n            return;\n        }\n\n        axios.get(next).then(response => {\n            let {next, results} = response.data;\n            \n            setNext(next);\n            setNames([...names, ...results]);\n        })\n    }\n\n    const capitalize = name => \n        (name || '').charAt(0).toUpperCase() + name.toLowerCase().slice(1);\n\n    const formatLabel = name => (<label>{name}</label>);\n\n    const formatName = name => \n        (name || '-').split('|').map(capitalize).map(formatLabel);\n\n    const handleChange = event => {\n        let { value } = event.currentTarget;\n\n        if(searchTimeout) {\n            clearTimeout(searchTimeout);\n        }\n\n        searchTimeout = setTimeout(() => fetchData(value), 1000);\n    };\n\n    const scrollToTop = () => window.scrollTo(0, 0);\n\n    const showLoading = () => (\n        <h3 className=\"loading\">\n            Carregando...\n        </h3>\n    );\n\n    useEffect(fetchData, []);\n\n    return (\n        <div className=\"index-container\">\n            <div className=\"search\">\n                <input type=\"text\" placeholder=\"Pesquise um nome\" onChange={handleChange}  />\n                <small>\n                    Fonte: IBGE/Censo 2010, dados tratados por \n                    √Ålvaro Justen/<a href=\"https://brasil.io\">Brasil.IO</a>.\n                </small>\n                \n                <div>\n                    {loading ? showLoading() : ''}\n                    \n                    <h3 class='vazio' style={loading || names.length > 0 ? {display : 'none'} : {}}>\n                        Nenhum nome encontrado.\n                    </h3>\n                </div>\n            </div>\n\n            <section className=\"list\">\n                <div style={names.length === 0 ? {display : 'none'} : {}}>\n                    <h3>Nomes</h3>\n\n                    <ul>\n                        <InfiniteScroll\n                            dataLength={names.length} \n                            next={fetchNext}\n                            hasMore={true}\n                            loader={showLoading()}\n                            >\n                            {names.map(name => (\n                                <li key={name.first_name}>\n                                    <div className=\"nome\">\n                                        {capitalize(name.first_name)}\n                                    </div>\n                                    \n                                    <div className=\"alternativas\">\n                                        <strong>Alternativas</strong>\n                                        <div>\n                                            {formatName(name.alternative_names)}\n                                        </div>\n                                    </div>\n                                </li>\n                            ))}\n                        </InfiniteScroll>\n                    </ul>\n                </div>\n\n                <button type=\"button\" className=\"scroll-top\" onClick={scrollToTop}>\n                    Topo\n                </button>\n            </section>\n        </div>\n    );\n}\n\nexport default Index;","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Index from './pages/Index';\n\nexport default function Routes () {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Index} />\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport Routes from './Routes';\n\nimport './global.css';\n\nfunction App() {\n  return (\n    <div className=\"root\">\n        <h2>Nomes alternativos</h2>\n        <Routes />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}